C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN iic.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE system\iic\iic.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\hardware\motor;.\system
                    -\delay;.\hardware\temperature;.\hardware\lumination;.\hardware\usart;.\hardware\display_lcd12864;.\hardware\display_lcd1
                    -602;.\system\control;.\system\iic;.\system\timer;.\hardware\clock) DEBUG OBJECTEXTEND PRINT(.\iic.lst) TABS(2) OBJECT(ii
                    -c.obj)

line level    source

   1          /*-----------------------------------------------
   2            名称：IIC协议 
   3            修改：无
   4            内容：函数是采用软件延时的方法产生SCL脉冲,固对高晶振频率要作 一定的修改....(本例是1us机器
   5              周期,即晶振频率要小于12MHZ)
   6          ------------------------------------------------*/  
   7            
   8                        
   9          #include "i2c.h"
*** WARNING C318 IN LINE 9 OF system\iic\iic.c: can't open file 'i2c.h'
  10          #include "delay.h"
  11          #include "main.h"
  12          
  13          #define  _Nop()  _nop_()  //定义空指令
  14                                   
  15          bit ack;                //应答标志位
  16          
  17          sbit SDA=P2^0;
*** ERROR C231 IN LINE 17 OF system\iic\iic.c: 'SDA': redefinition
  18          sbit SCL=P2^1;
  19          
  20          /*------------------------------------------------
  21                              启动总线
  22          ------------------------------------------------*/
  23          void Start_I2c()
  24          {
  25   1        SDA=1;   //发送起始条件的数据信号
  26   1        _Nop();
  27   1        SCL=1;
  28   1        _Nop();    //起始条件建立时间大于4.7us,延时
  29   1        _Nop();
  30   1        _Nop();
  31   1        _Nop();
  32   1        _Nop();    
  33   1        SDA=0;     //发送起始信号
  34   1        _Nop();    //起始条件锁定时间大于4μ
  35   1        _Nop();
  36   1        _Nop();
  37   1        _Nop();
  38   1        _Nop();       
  39   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  40   1        _Nop();
  41   1        _Nop();
  42   1      }
  43          /*------------------------------------------------
  44                              结束总线
  45          ------------------------------------------------*/
  46          void Stop_I2c()
  47          {
  48   1        SDA=0;    //发送结束条件的数据信号
  49   1        _Nop();   //发送结束条件的时钟信号
  50   1        SCL=1;    //结束条件建立时间大于4μ
C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 2   

  51   1        _Nop();
  52   1        _Nop();
  53   1        _Nop();
  54   1        _Nop();
  55   1        _Nop();
  56   1        SDA=1;    //发送I2C总线结束信号
  57   1        _Nop();
  58   1        _Nop();
  59   1        _Nop();
  60   1        _Nop();
  61   1      }
  62          
  63          
  64          
  65          
  66          /*----------------------------------------------------------------
  67                           字节数据传送函数               
  68          函数原型: void  SendByte(unsigned char c);
  69          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  70               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  71               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  72          ------------------------------------------------------------------*/
  73          void  SendByte(unsigned char c)
  74          {
  75   1       unsigned char BitCnt;
  76   1       
  77   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
  78   1          {
  79   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
  80   2             else  SDA=0;                
  81   2           _Nop();
  82   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
  83   2            _Nop(); 
  84   2            _Nop();             //保证时钟高电平周期大于4μ
  85   2            _Nop();
  86   2            _Nop();
  87   2            _Nop();         
  88   2           SCL=0; 
  89   2          }
  90   1          
  91   1          _Nop();
  92   1          _Nop();
  93   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
  94   1          _Nop();
  95   1          _Nop();   
  96   1          SCL=1;
  97   1          _Nop();
  98   1          _Nop();
  99   1          _Nop();
 100   1          if(SDA==1)ack=0;     
 101   1             else ack=1;        //判断是否接收到应答信号
 102   1          SCL=0;
 103   1          _Nop();
 104   1          _Nop();
 105   1      }
 106          
 107          
 108          
 109          
 110          
 111          
 112          
C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 3   

 113          /*----------------------------------------------------------------
 114                           字节数据传送函数               
 115          函数原型: unsigned char  RcvByte();
 116          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 117               发完后请用应答函数。  
 118          ------------------------------------------------------------------*/  
 119          unsigned char  RcvByte()
 120          {
 121   1        unsigned char retc;
 122   1        unsigned char BitCnt;
 123   1        
 124   1        retc=0; 
 125   1        SDA=1;             //置数据线为输入方式
 126   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 127   1            {
 128   2              _Nop();           
 129   2              SCL=0;       //置时钟线为低，准备接收数据位
 130   2              _Nop();
 131   2              _Nop();      //时钟低电平周期大于4.7us
 132   2              _Nop();
 133   2              _Nop();
 134   2              _Nop();
 135   2              SCL=1;       //置时钟线为高使数据线上数据有效
 136   2              _Nop();
 137   2              _Nop();
 138   2              retc=retc<<1;
 139   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 140   2              _Nop();
 141   2              _Nop(); 
 142   2            }
 143   1        SCL=0;    
 144   1        _Nop();
 145   1        _Nop();
 146   1        return(retc);
 147   1      }
 148          
 149          
 150          
 151          /*----------------------------------------------------------------
 152                               应答子函数
 153          原型:  void Ack_I2c(void);
 154           
 155          ----------------------------------------------------------------*/
 156          /*void Ack_I2c(void)
 157          {
 158            
 159            SDA=0;     
 160            _Nop();
 161            _Nop();
 162            _Nop();      
 163            SCL=1;
 164            _Nop();
 165            _Nop();              //时钟低电平周期大于4μ
 166            _Nop();
 167            _Nop();
 168            _Nop();  
 169            SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 170            _Nop();
 171            _Nop();    
 172          }*/
 173          /*----------------------------------------------------------------
 174                               非应答子函数
C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 4   

 175          原型:  void NoAck_I2c(void);
 176           
 177          ----------------------------------------------------------------*/
 178          void NoAck_I2c(void)
 179          {
 180   1        
 181   1        SDA=1;
 182   1        _Nop();
 183   1        _Nop();
 184   1        _Nop();      
 185   1        SCL=1;
 186   1        _Nop();
 187   1        _Nop();              //时钟低电平周期大于4μ
 188   1        _Nop();
 189   1        _Nop();
 190   1        _Nop();  
 191   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 192   1        _Nop();
 193   1        _Nop();    
 194   1      }
 195          
 196          
 197          
 198          
 199          
 200          
 201          /*----------------------------------------------------------------
 202                              向无子地址器件发送字节数据函数               
 203          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 204          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 205                     如果返回1表示操作成功，否则操作有误。
 206          注意：    使用前必须已结束总线。
 207          ----------------------------------------------------------------*/
 208          /*bit ISendByte(unsigned char sla,unsigned char c)
 209          {
 210             Start_I2c();               //启动总线
 211             SendByte(sla);             //发送器件地址
 212               if(ack==0)return(0);
 213             SendByte(c);               //发送数据
 214               if(ack==0)return(0);
 215            Stop_I2c();                 //结束总线
 216            return(1);
 217          }
 218          */
 219          
 220          /*----------------------------------------------------------------
 221                              向有子地址器件发送多字节数据函数               
 222          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 223          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 224                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 225                     如果返回1表示操作成功，否则操作有误。
 226          注意：    使用前必须已结束总线。
 227          ----------------------------------------------------------------*/
 228          /*bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 229          {
 230             unsigned char i;
 231           for(i=0;i<no;i++)
 232              { 
 233             Start_I2c();               //启动总线
 234             SendByte(sla);             //发送器件地址
 235               if(ack==0)return(0);
 236             SendByte(suba);            //发送器件子地址
C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 5   

 237               if(ack==0)return(0); 
 238           
 239               SendByte(*s);            //发送数据
 240                 if(ack==0)return(0);
 241               Stop_I2c();                  //结束总线
 242             DelayMs(1);               //必须延时等待芯片内部自动处理数据完毕
 243             s++;
 244             suba++;
 245              } 
 246            return(1);
 247          }
 248          */
 249          /*----------------------------------------------------------------
 250                              向无子地址器件读字节数据函数               
 251          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 252          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 253                    址sla，返回值在c.
 254                     如果返回1表示操作成功，否则操作有误。
 255          注意：    使用前必须已结束总线。
 256          ----------------------------------------------------------------*/
 257          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 258          {
 259             Start_I2c();                //启动总线
 260             SendByte(sla+1);            //发送器件地址
 261               if(ack==0)return(0);
 262             *c=RcvByte();               //读取数据
 263               NoAck_I2c();              //发送非就答位
 264               Stop_I2c();               //结束总线
 265            return(1);
 266          }
 267          
 268          */
 269          /*----------------------------------------------------------------
 270                              向有子地址器件读取多字节数据函数               
 271          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 272          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 273                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 274                     如果返回1表示操作成功，否则操作有误。
 275          注意：    使用前必须已结束总线。
 276          ----------------------------------------------------------------*/
 277          /*bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 278          {
 279             unsigned char i;
 280          
 281             Start_I2c();               //启动总线
 282             SendByte(sla);             //发送器件地址
 283               if(ack==0)return(0);
 284             SendByte(suba);            //发送器件子地址
 285               if(ack==0)return(0);
 286          
 287             Start_I2c();
 288             SendByte(sla+1);
 289                if(ack==0)return(0);
 290          
 291            for(i=0;i<no-1;i++)
 292              { 
 293               *s=RcvByte();              //发送数据
 294                Ack_I2c();                //发送就答位 
 295               s++;
 296              } 
 297             *s=RcvByte();
 298              NoAck_I2c();                 //发送非应位
C51 COMPILER V9.54   IIC                                                                   09/08/2020 10:07:24 PAGE 6   

 299              Stop_I2c();                    //结束总线
 300            return(1);
 301          }
 302          */

C51 COMPILATION COMPLETE.  1 WARNING(S),  1 ERROR(S)
